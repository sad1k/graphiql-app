import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import dynamic from 'next/dynamic';

import { NextIntlClientProvider } from 'next-intl';
import { getMessages, unstable_setRequestLocale } from 'next-intl/server';

import ToastProvider from '@/providers/ToastProvider';
import Footer from '@/components/Footer/Footer';
import { routing } from '@/i18n/routing';
import { FC } from 'react';
import StoreProvider from './StoreProvider';
import './globals.css';

export function generateStaticParams() {
  return routing.locales.map((locale) => ({ locale }));
}

const Header = dynamic(() => import('@/components/Header/Header'), {
  ssr: false,
});

const inter = Inter({ subsets: ['latin'] });

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
  icons: [
    {
      rel: 'icon',
      type: 'image/svg',
      sizes: '32x32',
      url: '/graphql.svg',
    },
  ],
};

interface ILayout {
  children: React.ReactNode;
  params: { locale: string };
}

const RootLayout: FC<ILayout> = async ({ children, params: { locale } }) => {
  unstable_setRequestLocale(locale);

  const messages = await getMessages();

  return (
    <html lang={locale} data-lt-installed='true'>
      <StoreProvider>
        <body className={inter.className}>
          {' '}
          <NextIntlClientProvider messages={messages}>
            <Header />
            <main>
              <ToastProvider>{children}</ToastProvider>{' '}
            </main>
            <Footer />{' '}
          </NextIntlClientProvider>
        </body>
      </StoreProvider>
    </html>
  );
};

export default RootLayout;
